<% if (props.navigationPackage?.options.type === 'stack') { %>
	import { NavigationContainer } from "@react-navigation/native";
	import { createStackNavigator } from "@react-navigation/stack";
    <%  if (props.stylingPackage?.name === "tamagui") { %>
      import { Button, Text } from "tamagui";
    <% } %>
  

	import Overview from "../screens/overview";
	import Details from "../screens/details";
  import { BackButton } from '../components/BackButton';

	export type RootStackParamList = {
		Overview: undefined;
		Details: { name: string };
	};

	const Stack = createStackNavigator<RootStackParamList>();

	export default function RootStack() {

		return (
			<NavigationContainer>
				<Stack.Navigator initialRouteName="Overview">
					<Stack.Screen name="Overview" component={Overview} />
					<Stack.Screen
						name="Details"
						component={Details}
						<%  if (props.stylingPackage?.name === "tamagui") { %>
							options={({ navigation }) => ({
								headerLeft: () => (
									<Button
										unstyled
										flexDirection="row"
										backgroundColor="transparent"
										pressStyle={{ opacity: 0.5 }}
										paddingLeft={20}
										onPress={navigation.goBack}
										icon={<Feather name="chevron-left" size={16} color="#007AFF" />}
									>
										<Text color="#007AFF">Back</Text>
									</Button>
								),
							})}
						<% } else { %>
							options={({ navigation }) => ({
                headerLeft: () => <BackButton onPress={navigation.goBack} />,
							})}
						<% } %>
					/>
				</Stack.Navigator>
			</NavigationContainer>
		);
	}

<% } else if (props.navigationPackage?.options.type === 'tabs') { %>
	import { NavigationContainer } from "@react-navigation/native";
	import { createStackNavigator } from "@react-navigation/stack";

	import Modal from "../screens/modal";
	import TabNavigator from "./tab-navigator";

	export type RootStackParamList = {
		TabNavigator: undefined;
		Modal: undefined;
	};

	const Stack = createStackNavigator<RootStackParamList>();

	export default function RootStack() {
		return (
			<NavigationContainer>
				<Stack.Navigator initialRouteName="TabNavigator">
					<Stack.Screen
						name="TabNavigator"
						component={TabNavigator}
						options={{ headerShown: false }}
					/>
					<Stack.Screen
						name="Modal"
						component={Modal}
						options={{ presentation: "modal", headerLeft: () => null }}
					/>
				</Stack.Navigator>
			</NavigationContainer>
		);
	}
	<% } else if (props.navigationPackage?.options.type === 'drawer + tabs') { %>
		import { NavigationContainer } from "@react-navigation/native";
		import { createStackNavigator } from '@react-navigation/stack';
	
		import Modal from "../screens/modal";
		import DrawerNavigator from "./drawer-navigator";
	
		export type RootStackParamList = {
			DrawerNavigator: undefined;
			Modal: undefined;
      TabNavigator: undefined;
		};
	
		const Stack = createStackNavigator<RootStackParamList>();
	
		export default function RootStack() {
			return (
				<NavigationContainer>
					<Stack.Navigator initialRouteName="DrawerNavigator">
						<Stack.Screen
							name="DrawerNavigator"
							component={DrawerNavigator}
							options={{ headerShown: false }}
						/>
						<Stack.Screen
							name="Modal"
							component={Modal}
							options={{ presentation: "modal", headerLeft: () => null }}
						/>
					</Stack.Navigator>
				</NavigationContainer>
			);
		}
<% } %>